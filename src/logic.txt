



if (number <= how many is pushed over)
	push over and rotate b (essentially append at bottom)
	count ++
else if number is smaller than decision median (sqrt(start len) * 1.3)
	push to b
	count ++
else 
	rotate


AFTER A EMPTY

- get biggest number in b
- find shortest path to top (pos smaller or bigger than len / 2)
- move to top using shortes way
- push to a

///

Lars: linear algorithm is not good for sorting
do the bucket sorts, two sorts of buckets, and then you're finished

//

function_smallest_pos(stack)
	any numbers an array? Yes? â€”> smallest is first portion
	then loop through array and check if any position smaller than current smallest
	in the end after loop, return smallest pos

next_smallest_pos(stack, last smallest)

293 844 773 462 394 892 883 958 863 321 421 867 369 174 183 531 713 29 492 288 487 633 590 699 912 9 187 673 136 408 437 979 752 414 964 424 4 281 231 255 977 419 77 691 85 241 74 589 938 84 436 317 52 655 651 566 987 661 490 422 787 279 908 107 493 833 12 639 88 389 373 906 595 276 569 37 101 361 817 905 259 910 847 784 965 211 545 522 636 498 504 668 771 222 267 653 137 823 606 295 -58206593 314170310 317939402 590634541 448536759 -22111356 -589863602 -2707408 833405183 361039694 759330119 -556062822 -480704613 -722182522 -733021446 819228681 309289106 668355074 -33257369 475667687 742530194 410514677 258778413 789689708 803621415 -782953271 -859702108 -566914823 -433478824 392085917 -330484595 -481589056 2095143 -407950791 -65410195 -628952739 -929820031 577625163 633975908 309012402 -410600314 -418609009 810361352 -280622961 867599958 365514931 -636632095 925125494 977874126 811920364 -640650102 -209646824 623259120 375943227 360391931 -85366450 -685216275 -408483213 -378377777 902580641 864210076 -874869712 -690187343 685919011 71786741 -485269772 835272053 970715590 -96772772 251440023 -237482972 163954794 209929256 100873262 821273070 151462790 -98626583 -557996994 -114412636 -247937015 520671181 393640262 -127339234 425374894 -889955125 668453893 -92024044 109810088 -973275584 124877936 666957987 572330564 599545675 591080586 277306885 400809966 201547003 584330887 -383506972 -486317337 351243 3209668 3790379 3685530 4453114 3323872 433671 87179 2490895 2130577 989908 3797855 3695413 4713924 1240535 4805594 2361858 3926132 1286405 2437351 2779072 1216873 3966710 2367012 2123492 4356577 2854082 3492661 3438162 3841149 3361955 1413085 3603461 1887256 4541783 1943784 1393599 772157 4040868 394359 957999 3055997 1700508 859421 2119544 3621022 2983214 2362062 4368777 603537 3500088 2651247 2935218 764004 3287653 4247392 3495324 499901 1775831 4137999 309877 4004045 438329 597318 4269283 2744893 1384232 4698202 3463140 1293439 4444683 2054300 4792903 2144162 811513 4784467 1974587 95932 1432879 1186620 2356691 644247 2116401 230766 2749805 4567375 4925787 4581687 984783 1812500 2711239 3798335 4413079 3279737 2116643 1536673 507836 152835 4786450 225567
